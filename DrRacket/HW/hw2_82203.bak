#lang racket
(define(helper result start xs)
  (cond
    [(null? xs) (reverse result)]
    [(pair? (assoc start xs)) (helper (cons (cdr(assoc start xs)) result) (cdr(assoc start xs)) (remove (assoc start xs) xs) )]
    [else (error "No such itinerary!")]
    )
  )
(define(itinerary flights)
  (Î» (start) (helper (cons start '()) start flights)
    )
  )

(equal? ((itinerary '(("SFO" . "HKO") ("YYZ" . "SFO") ("YUL" . "YYZ") 
("HKO" . "ORD"))) "YUL") '("YUL" "YYZ" "SFO" "HKO" "ORD") )

(equal? ((itinerary '(("A" . "B") ("A" . "C") ("B" . "C") ("C" . "A"))) 
"A") '("A" "B" "C" "A" "C"))

((itinerary '(("SFO" . "COM") ("COM" . "YYZ"))) "COM") ;"No such itinerary!"
