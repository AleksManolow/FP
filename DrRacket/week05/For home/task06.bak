#lang racket
(require math/number-theory)
(define(factorize num)
  (filter (Î» (x) (and (zero? (remainder num x)) (prime? x))) (range 2 (add1 num))) 
  )

(equal? (factorize 2) '(2))
(equal? (factorize 6) '(2 3))
(equal? (factorize 13) '(13))
(equal? (factorize 123) '(3 41))
(equal? (factorize 152) '(2 19))
(equal? (factorize 12356498) '(2 7 11 19 41 103))
